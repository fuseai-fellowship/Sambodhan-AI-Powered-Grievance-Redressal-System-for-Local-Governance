"""Initial tables

Revision ID: f5191104f263
Revises: 
Create Date: 2025-10-20 07:31:42.670074

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f5191104f263'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('districts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('municipalities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ward_number', sa.Integer(), nullable=False),
    sa.Column('municipality_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['municipality_id'], ['municipalities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.Text(), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('department', sa.Integer(), nullable=True),
    sa.Column('district_id', sa.Integer(), nullable=True),
    sa.Column('municipality_id', sa.Integer(), nullable=True),
    sa.Column('ward_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.ForeignKeyConstraint(['municipality_id'], ['municipalities.id'], ),
    sa.ForeignKeyConstraint(['ward_id'], ['wards.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('complaints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('citizen_id', sa.Integer(), nullable=True),
    sa.Column('department', sa.SmallInteger(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('message_processed', sa.Text(), nullable=True),
    sa.Column('urgency', sa.SmallInteger(), nullable=True),
    sa.Column('current_status', sa.SmallInteger(), nullable=True),
    sa.Column('date_submitted', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('district_id', sa.Integer(), nullable=True),
    sa.Column('municipality_id', sa.Integer(), nullable=True),
    sa.Column('ward_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['citizen_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.ForeignKeyConstraint(['municipality_id'], ['municipalities.id'], ),
    sa.ForeignKeyConstraint(['ward_id'], ['wards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('complaint_status_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('complaint_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=False),
    sa.Column('changed_by_user_id', sa.Integer(), nullable=True),
    sa.Column('changed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['complaint_id'], ['complaints.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('misclassified_complaints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('complaint_id', sa.Integer(), nullable=False),
    sa.Column('model_predicted_department', sa.SmallInteger(), nullable=True),
    sa.Column('model_predicted_urgency', sa.SmallInteger(), nullable=True),
    sa.Column('correct_department', sa.SmallInteger(), nullable=True),
    sa.Column('correct_urgency', sa.SmallInteger(), nullable=True),
    sa.Column('reported_by_user_id', sa.Integer(), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['complaint_id'], ['complaints.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reported_by_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('misclassified_complaints')
    op.drop_table('complaint_status_history')
    op.drop_table('complaints')
    op.drop_table('users')
    op.drop_table('wards')
    op.drop_table('municipalities')
    op.drop_table('districts')
    # ### end Alembic commands ###
